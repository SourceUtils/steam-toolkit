buildscript {
    ext.kotlin_version = '0.11.91'
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

configurations { antlr4 }

ext.antlr = [
        output : new File(projectDir, 'src/gen/java'),
        version: '4.5'
]

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    antlr4 "org.antlr:antlr4:${antlr.version}"

    compile "org.antlr:antlr4-runtime:${antlr.version}"
    compile 'org.json:json:20140107'
    compile project(':java-xplaf')
    compile project(':java-vfs:core')
    compile project(':web-api-base')
}

task compileAntlr() {
    description = 'Generates Java sources from ANTLR4 grammars.'
    mkdir(antlr.output)

    def files = [:].withDefault { [] }
    def base = new File(projectDir, 'src/main/antlr4')
    base.eachFileRecurse(groovy.io.FileType.FILES) {
        if (!it.name.endsWith('.g4')) return
        def pkg = base.toURI().relativize(it.parentFile.toURI()).toString().replaceAll('/$', '').replace(File.separator, '.')
        files[pkg] << it.toString().replace(base.toString() + '/', '')
    }
    files.each { pkg, grammars ->
        doLast {
            javaexec {
                classpath configurations.all
                workingDir = base.toString()
                println 'found ' + grammars
                main = 'org.antlr.v4.Tool'
                args = ["-o", "${antlr.output}", "-package", pkg, grammars].flatten()
            }
        }
    }
}

compileJava.dependsOn compileAntlr
sourceSets.main.java.srcDirs += antlr.output
clean { delete antlr.output }
